<?xml version="1.0"?>

<!-- ant build file for tdxml project
     Copyright (C) 2000-2010  Minnesota Department of Transportation

     This program is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation; either version 2 of the License, or
     (at your option) any later version.

     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.  -->

<project default="jar" basedir=".">

	<!-- Base directory configuration -->
	<property name="src.dir" value="src"/>

	<!-- Property configuration -->
	<property file="project.properties"/>
	<property file="${user.home}/.ant.properties"/>

	<!-- Build directory configuration -->
	<property name="build.dir" value="build"/>
	<property name="build.etc" value="${build.dir}/etc"/>
	<property name="build.lib" value="${build.dir}/lib"/>
	<property name="build.src" value="${build.dir}/src"/>
	<property name="build.classes" value="${build.dir}/classes"/>
	<property name="build.docs" value="${build.dir}/docs"/>
	<property name="dist.name" value="${name}-${version}"/>
	<property name="dist.dir" value="${dist.name}"/>
	<property name="dist.lib" value="${dist.dir}/lib"/>
	<property name="dist.docs" value="${dist.dir}/docs"/>
	<property name="dist.etc" value="${dist.dir}/etc"/>

	<!-- junit related -->
	<property name="testsrc.dir" location="test"/>
	<property name="testbuild.dir" location="${build.dir}/test"/>
	<property name="testdata.dir" location="${testbuild.dir}/data"/>
	<property name="testreports.dir" location="${testbuild.dir}/reports"/>
	<path id="junit.classpath">
		<pathelement location="${build.dir}/classes"/>
		<pathelement location="${build.dir}/test"/>
	</path>

	<!-- Prepare the build directory -->
	<target name="prepare">
		<tstamp/>
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.etc}"/>
		<mkdir dir="${build.lib}"/>
		<mkdir dir="${build.src}"/>
		<mkdir dir="${build.docs}"/>
		<copy todir="${build.src}">
			<fileset dir="${src.dir}">
				<include name = "**/*.java" />
			</fileset>
		</copy>
	</target>

	<!-- Compile the source code -->
	<target name="compile"
		depends="prepare"
		description="--> compile the source code">
		<mkdir dir="${build.classes}"/>
		<javac srcdir="${build.src}"
		       destdir="${build.classes}"
		       debug="${debug}"
		       deprecation="on"
		       source="1.5"
		       target="1.5">
			<compilerarg value="-Xlint:unchecked"/>
		</javac>
	</target>

	<!-- Create the jar file -->
	<target name="jar"
		depends="compile"
		description="--> generate the ${name} jar files">
		<jar jarfile="${build.lib}/${name}-${version}.jar">
			<fileset dir="${build.classes}">
				<include name="us/mn/state/dot/tdxml/**"/>
			</fileset>
		</jar>
	</target>

	<!-- Create api documentation -->
	<target name="javadocs"
		depends="prepare"
		description="--> create the javadocs for the project">
		<mkdir dir="${build.docs}"/>
		<javadoc packagenames="${packages}"
		         sourcepath="${basedir}/${build.src}"
		         destdir="${build.docs}"
		         author="true"
		         version="true"
		         windowtitle="${name} API"
		         doctitle="${name}"
		         bottom="Copyright &#169; Minnesota Department of
				Transportation. All Rights Reserved.">
		</javadoc>
	</target>

	<!-- Create the distribution -->
	<target name="dist"
		depends="jar,javadocs"
		description="--> generate the ${name} distribution">
		<mkdir dir="${dist.docs}"/>
		<mkdir dir="${dist.etc}"/>
		<mkdir dir="${dist.lib}"/>
		<copy todir="${dist.lib}">
			<fileset dir="${build.lib}">
				<include name="${name}-${version}.jar"/>
			</fileset>
		</copy>

		<copy todir="${dist.docs}">
			<fileset dir="${build.docs}"/>
		</copy>

		<copy todir="${dist.dir}">
			<fileset dir=".">
				<include name="COPYING"/>
			</fileset>
		</copy>

		<zip zipfile="${dist.name}.zip"
		     basedir="${dist.dir}/.."
		     includes="${dist.dir}/**"/>
	</target>

	<!-- Clean up build and distribution directories -->
	<target name="clean"
		description="--> clean up the created directories">
		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
		<delete file="${dist.name}.zip"/>
		<delete file="${dist.name}-src.zip"/>
	</target>

       <!-- init junit dirs-->
       <target name="init-junit"
	       depends="prepare"
	       description="Init junit test cases">
	       <delete dir="${testdata.dir}"/>
	       <delete dir="${testreports.dir}"/>
	       <mkdir dir="${testbuild.dir}" />
	       <mkdir dir="${testdata.dir}" />
	       <mkdir dir="${testreports.dir}" />
       </target>

       <!-- compile junit test cases -->
       <target name="compile-junit"
	       depends="compile, init-junit"
	       description="Compile junit test cases">
	       <javac srcdir="${testsrc.dir}"
		      includeAntRuntime="true"
		      destdir="${testbuild.dir}"
		      debug="true">
	       </javac>
       </target>

       <!-- run junit test cases -->
       <target name="test" depends="compile-junit"
	       description="Run junit test cases">
	       <junit printsummary="yes" 
		      fork="yes" 
		      haltonfailure="yes" 
		      errorProperty="test.failed" 
		      failureProperty="test.failed">
		       <formatter type="plain" usefile="false"/>
		       <formatter type="xml" usefile="true"/>
		       <jvmarg value="-Ddebug=true"/>
		       <batchtest todir="${testreports.dir}">
			       <fileset dir="${testbuild.dir}"
			                includes="**/*Test.class"/>
		       </batchtest>
	       </junit>
	       <fail message="Junit tests failed. Check log and/or reports."
		       if="test.failed"/>
       </target>
</project>
